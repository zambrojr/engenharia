{"version":3,"sources":["webpack://splitpanes/webpack/universalModuleDefinition","webpack://splitpanes/webpack/bootstrap","webpack://splitpanes/./src/components/splitpanes.vue?f910","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://splitpanes/src/components/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes.vue?5da2","webpack://splitpanes/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_splitpanes_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_splitpanes_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","window","document","currentScript","src","match","render","staticRenderFns","splitpanesvue_type_script_lang_js_","props","watchSlots","type","Boolean","default","horizontal","pushOtherPanes","data","container","vnode","offsetLeft","offsetTop","slotsCount","vnodes","panes","splitters","touch","mouseDown","dragging","activeSplitter","slotsCopy","methods","bindEvents","hasTouch","addEventListener","onMouseMove","passive","onMouseUp","onMouseDown","e","splitterIndex","preventDefault","calculatePanesSize","getCurrentMouseDrag","$emit","map","pane","min","max","width","onSplitterDblClick","totalMinWidths","x","touches","clientX","y","clientY","getContainerOffsetTop","force","arguments","length","undefined","el","top","offsetParent","getContainerOffsetLeft","left","getCurrentDragPercentage","drag","doc","documentElement","scrollTop","pageYOffset","clientTop","offset","concat","containerSize","sumPrevPanesSize","forEach","sums","prevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","minDrag","maxDrag","dragPercentage","Math","panesToResize","vars","doPushOtherPanes","paneBefore","paneAfter","_this","findPrevExpandedPane","index","findNextExpandedPane","reduce","total","arr","_toConsumableArray","reverse","some","mounted","$refs","computed","defaultWidth","createEl","_this2","splitPanesChildren","$slots","slotsHaveChanged","discardProps","slotsExport","JSON","stringify","val","indexOf","filter","tag","text","trim","_vnode$data","_vnode$data$attrs","attrs","_attrs$splitpanesMin","_attrs$splitpanesMax","_attrs$splitpanesDef","Default","$set","parseInt","parseFloat","id","_on","splitterAttributes","class","ref","on","_defineProperty","push","paneAttributes","style","_objectSpread","height","click","wrapperAttributes","components_splitpanesvue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","__file","splitpanes","__webpack_exports__"],"mappings":"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","file":"splitpanes.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"splitpanes\"] = factory();\n\telse\n\t\troot[\"splitpanes\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","<script>\nexport default {\n  props: {\n    watchSlots: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      type: Boolean,\n      default: false\n    },\n    pushOtherPanes: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      container: { vnode: null, offsetLeft: null, offsetTop: null },\n      slotsCount: 0,\n      vnodes: [],\n      panes: [],\n      splitters: [],\n      touch: { mouseDown: false, dragging: false, activeSplitter: null },\n      slotsCopy: ''\n    }\n  },\n\n  methods: {\n    bindEvents () {\n      const hasTouch = 'ontouchstart' in window\n\n      // Passive: false to prevent scrolling while touch dragging.\n      document.addEventListener(hasTouch ? 'touchmove' : 'mousemove', this.onMouseMove, { passive: false })\n      document.addEventListener(hasTouch ? 'touchend' : 'mouseup', this.onMouseUp)\n    },\n\n    onMouseDown (e, splitterIndex) {\n      this.touch.mouseDown = true\n      this.touch.activeSplitter = splitterIndex\n    },\n\n    onMouseMove (e) {\n      if (this.touch.mouseDown) {\n        // Prevent scrolling while touch dragging (only works with an active event, eg. passive: false).\n        e.preventDefault()\n\n        this.touch.dragging = true\n        this.calculatePanesSize(this.getCurrentMouseDrag(e))\n        this.$emit('resize', this.panes.map(pane => ({ min: pane.min, max: pane.max, width: pane.width })))\n      }\n    },\n\n    onMouseUp () {\n      if (this.touch.dragging) {\n        this.$emit('resized', this.panes.map(pane => ({ min: pane.min, max: pane.max, width: pane.width })))\n      }\n\n      this.touch.mouseDown = false\n      this.touch.dragging = false\n    },\n\n    // On splitter dbl click maximize this pane.\n    onSplitterDblClick (e, splitterIndex) {\n      let totalMinWidths = 0\n      this.panes = this.panes.map((pane, i) => {\n        pane.width = i === splitterIndex ? pane.max : pane.min\n        if (i !== splitterIndex) totalMinWidths += pane.min\n\n        return pane\n      })\n      this.panes[splitterIndex].width -= totalMinWidths\n      this.$emit('pane-maximize', this.panes[splitterIndex])\n    },\n\n    getCurrentMouseDrag: (e) => ({\n      x: 'ontouchstart' in window ? e.touches[0].clientX : e.clientX,\n      y: 'ontouchstart' in window ? e.touches[0].clientY : e.clientY\n    }),\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\n    getContainerOffsetTop (force = false) {\n      if (this.container.offsetTop === null || force) {\n        let el = this.container.vnode\n        let top = el.offsetTop\n\n        while ((el = el.offsetParent)) {\n          top += el.offsetTop\n        }\n\n        this.container.offsetTop = top\n      }\n\n      return this.container.offsetTop\n    },\n\n    // Recursively sum all the offsetTop values from current element up the tree until body.\n    getContainerOffsetLeft (force = false) {\n      if (this.container.offsetLeft === null || force) {\n        let el = this.container.vnode\n        let left = el.offsetLeft\n\n        while ((el = el.offsetParent)) {\n          left += el.offsetLeft\n        }\n\n        this.container.offsetLeft = left\n      }\n\n      return this.container.offsetLeft\n    },\n\n    // Returns the drag percentage of the splitter relative to the 2 panes it's inbetween.\n    // if the sum of width of the 2 cells  is 60%, the dragPercentage range will be 0 to 100% of this 60%.\n    getCurrentDragPercentage (drag) {\n      const splitterIndex = this.touch.activeSplitter\n      const doc = document.documentElement\n      const scrollTop = this.horizontal ? (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0) : null\n      const offset = this[`getContainerOffset${this.horizontal ? 'Top' : 'Left'}`]()\n      drag = drag[this.horizontal ? 'y' : 'x'] - offset + scrollTop\n\n      // In the code bellow 'size' refers to 'width' for vertical and 'height' for horizontal layout.\n      const containerSize = this.container.vnode[this.horizontal ? 'clientHeight' : 'clientWidth']\n      let sumPrevPanesSize = 0\n      this.panes.forEach((pane, i) => (sumPrevPanesSize += i < splitterIndex ? pane.width : 0))\n\n      return drag * 100 / containerSize\n    },\n\n    calculatePanesSize (drag) {\n      const splitterIndex = this.touch.activeSplitter\n      let sums = {\n        prevPanesSize: this.sumPrevPanesSize(splitterIndex),\n        nextPanesSize: this.sumNextPanesSize(splitterIndex),\n        prevReachedMinPanes: 0,\n        nextReachedMinPanes: 0\n      }\n\n      const minDrag = 0 + (this.pushOtherPanes ? 0 : sums.prevPanesSize)\n      const maxDrag = 100 - (this.pushOtherPanes ? 0 : sums.nextPanesSize)\n      const dragPercentage = Math.max(Math.min(this.getCurrentDragPercentage(drag), maxDrag), minDrag)\n\n      // If not pushing other panes, panes to resize are right before and right after splitter.\n      let panesToResize = [splitterIndex, splitterIndex + 1]\n\n      // When pushOtherPanes = true, find the closest expanded pane on each side of the splitter.\n      if (this.pushOtherPanes) {\n        let vars = this.doPushOtherPanes(sums, dragPercentage)\n\n        if (!vars) return // Prevent other calculation.\n        else ({ sums, panesToResize } = vars)\n      }\n\n      let paneBefore = this.panes[panesToResize[0]] || null\n      let paneAfter = this.panes[panesToResize[1]] || null\n\n      if (paneBefore !== null) {\n        paneBefore.width = Math.min(Math.max(dragPercentage - sums.prevPanesSize - sums.prevReachedMinPanes, paneBefore.min), paneBefore.max)\n      }\n\n      if (paneAfter !== null) {\n        paneAfter.width = Math.min(Math.max(100 - dragPercentage - sums.nextPanesSize - sums.nextReachedMinPanes, paneAfter.min), paneAfter.max)\n      }\n    },\n\n    doPushOtherPanes (sums, dragPercentage) {\n      const splitterIndex = this.touch.activeSplitter\n      let panesToResize = [splitterIndex, splitterIndex + 1]\n\n      // Pushing Down.\n      // Going smaller than the current pane min width: take the previous expanded pane.\n      if (dragPercentage < sums.prevPanesSize + this.panes[panesToResize[0]].min) {\n        panesToResize[0] = this.findPrevExpandedPane(splitterIndex).index\n\n        sums.prevReachedMinPanes = 0\n        // If pushing a n-2 or less pane, from splitter, then make sure all in between is at min size.\n        if (panesToResize[0] < splitterIndex) {\n          this.panes.forEach((pane, i) => {\n            if (i > panesToResize[0] && i <= splitterIndex) {\n              pane.width = pane.min\n              sums.prevReachedMinPanes += pane.min\n            }\n          })\n        }\n\n        sums.prevPanesSize = this.sumPrevPanesSize(panesToResize[0])\n\n        // If nothing else to push down, cancel dragging.\n        if (panesToResize[0] === undefined) {\n          sums.prevReachedMinPanes = 0\n          this.panes[0].width = this.panes[0].min\n          this.panes.forEach((pane, i) => {\n            if (i > 0 && i <= splitterIndex) {\n              pane.width = pane.min\n              sums.prevReachedMinPanes += pane.min\n            }\n          })\n          this.panes[panesToResize[1]].width = 100 - sums.prevReachedMinPanes - this.panes[0].min - sums.prevPanesSize - sums.nextPanesSize\n          return null\n        }\n      }\n\n      // Pushing Up.\n      // Pushing up beyond min width is reached: take the next expanded pane.\n      if (dragPercentage > 100 - sums.nextPanesSize - this.panes[panesToResize[1]].min) {\n        panesToResize[1] = this.findNextExpandedPane(splitterIndex).index\n\n        sums.nextReachedMinPanes = 0\n        // If pushing a n+2 or more pane, from splitter, then make sure all in between is at min size.\n        if (panesToResize[1] > splitterIndex + 1) {\n          this.panes.forEach((pane, i) => {\n            if (i > splitterIndex && i < panesToResize[1]) {\n              pane.width = pane.min\n              sums.nextReachedMinPanes += pane.min\n            }\n          })\n        }\n\n        sums.nextPanesSize = this.sumNextPanesSize(panesToResize[1] - 1)\n\n        // If nothing else to push up, cancel dragging.\n        if (panesToResize[1] === undefined) {\n          sums.nextReachedMinPanes = 0\n          this.panes[this.panes.length - 1].width = this.panes[this.panes.length - 1].min\n          this.panes.forEach((pane, i) => {\n            if (i < this.panes.length - 1 && i >= splitterIndex + 1) {\n              pane.width = pane.min\n              sums.nextReachedMinPanes += pane.min\n            }\n          })\n\n          this.panes[panesToResize[0]].width = 100 - sums.prevPanesSize - sums.nextReachedMinPanes - this.panes[this.panes.length - 1].min - sums.nextPanesSize\n          return null\n        }\n      }\n\n      return { sums, panesToResize }\n    },\n\n    sumPrevPanesSize (splitterIndex) {\n      return this.panes.reduce((total, pane, i) => total + (i < splitterIndex ? pane.width : 0), 0)\n    },\n\n    sumNextPanesSize (splitterIndex) {\n      return this.panes.reduce((total, pane, i) => total + (i > splitterIndex + 1 ? pane.width : 0), 0)\n    },\n\n    // Return the previous pane from siblings which has a size (width for vert or height for horz) of more than 0.\n    findPrevExpandedPane (splitterIndex) {\n      let pane = {}\n      let arr = [...this.panes]\n      arr.reverse().some(p => {\n        if (p.index < splitterIndex && p.width > p.min) pane = p\n        return p.index < splitterIndex && p.width > p.min\n      })\n      return pane\n    },\n\n    // Return the next pane from siblings which has a size (width for vert or height for horz) of more than 0.\n    findNextExpandedPane (splitterIndex) {\n      let pane = {}\n      this.panes.some(p => {\n        if (p.index > splitterIndex + 1 && p.width > p.min) pane = p\n        return p.index > splitterIndex + 1 && p.width > p.min\n      })\n      return pane\n    }\n  },\n\n  mounted () {\n    this.container.vnode = this.$refs.container\n    this.bindEvents()\n    this.$emit('ready')\n  },\n\n  computed: {\n    defaultWidth () {\n      return 100 / this.vnodes.length\n    }\n  },\n\n  render (createEl) {\n    const splitPanesChildren = []\n\n    if (!this.$slots.default) splitPanesChildren.push(createEl('div', 'Splitpanes needs some content here.'))\n    else {\n      let slotsHaveChanged = false\n\n      if (this.watchSlots) {\n        const discardProps = ['$options', '$parent', '$root', '$el',\n          '$refs', '$slots', '$scopedSlots', '$vnode', '_data', '__vue__',\n          '_self', '_vnode', '_watcher', '_watchers', '_computedWatchers', '_renderProxy', 'vnodes',\n          'container', 'Ctor', 'context', 'parent', 'componentInstance', 'componentOptions']\n\n        const slotsExport = JSON.stringify(this.$slots.default, (name, val) => {\n          // Discard the properties listed in array to prevent circular reference.\n          return discardProps.indexOf(name) > -1 ? undefined : val\n        })\n\n        slotsHaveChanged = this.slotsCopy !== slotsExport\n\n        if (slotsHaveChanged) this.slotsCopy = slotsExport\n      }\n\n      // Create the panes and splitters arrays each time the slots are updated.\n      if (this.slotsCount !== this.$slots.default.length || slotsHaveChanged) {\n        this.vnodes = this.$slots.default.filter(vnode => vnode.tag || (vnode.text || '').trim())\n        this.vnodes.forEach((vnode, i) => {\n          const { data: { attrs = {} } = {} } = vnode\n          const { 'splitpanes-min': min = 0, 'splitpanes-max': max = 100, 'splitpanes-default': Default = this.defaultWidth } = attrs\n\n          this.$set(this.panes, i, { width: parseInt(Default), index: i, min: parseFloat(min), max: parseFloat(max) })\n          if (i) this.$set(this.splitters, i - 1, { id: `splitter-${i - 1}`, index: i - 1 })\n        })\n\n        this.slotsCount = this.$slots.default.length\n      }\n\n      this.vnodes.forEach((vnode, i) => {\n        // Splitter.\n        if (i) {\n          let splitterAttributes = {\n            id: i - 1,\n            class: 'splitpanes__splitter',\n            ref: `splitter-${i - 1}`,\n            on: {\n              ['ontouchstart' in window ? 'touchstart' : 'mousedown']: e => this.onMouseDown(e, i - 1),\n              dblclick: e => this.onSplitterDblClick(e, i)\n            }\n          }\n          splitPanesChildren.push(createEl('div', splitterAttributes))\n        }\n\n        // Pane.\n        let paneAttributes = {\n          id: i,\n          class: 'splitpanes__pane',\n          style: {\n            ...(this.horizontal ? { height: `${this.panes[i].width}%` } : null),\n            ...(!this.horizontal ? { width: `${this.panes[i].width}%` } : null)\n          },\n          on: {\n            click: e => this.$emit('pane-click', this.panes[i])\n          }\n        }\n        splitPanesChildren.push(createEl('div', paneAttributes, [vnode]))\n      })\n    }\n\n    // Wrapper.\n    let wrapperAttributes = {\n      class: [\n        'splitpanes',\n        `splitpanes--${this.horizontal ? 'horizontal' : 'vertical'}`,\n        this.touch.dragging ? 'splitpanes--dragging' : ''\n      ],\n      ref: 'container'\n    }\n\n    return createEl('div', wrapperAttributes, splitPanesChildren)\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.splitpanes {\n  display: flex;\n  width: 100%;\n  height: 100%;\n\n  &--vertical {flex-direction: row;}\n  &--horizontal {flex-direction: column;}\n  &--dragging * {user-select: none;}\n\n  &__pane {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  &--vertical > .splitpanes__splitter {min-width: 1px;cursor: col-resize;}\n  &--horizontal > .splitpanes__splitter {min-height: 1px;cursor: row-resize;}\n}\n\n.splitpanes.default-theme {\n  .splitpanes__pane {\n    background-color: #f2f2f2;\n  }\n\n  .splitpanes__splitter {\n    background-color: #fff;\n    box-sizing: border-box;\n    position: relative;\n\n    &:before, &:after {\n      content: \"\";\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      background-color: rgba(0, 0, 0, .15);\n      transition: background-color 0.3s;\n    }\n    &:hover:before, &:hover:after {background-color: rgba(0, 0, 0, .25);}\n  }\n}\n\n.default-theme {\n  &.splitpanes .splitpanes .splitpanes__splitter {\n    z-index: 1;\n  }\n\n  &.splitpanes--vertical > .splitpanes__splitter,\n  .splitpanes--vertical > .splitpanes__splitter {\n    width: 9px;\n    border-left: 1px solid #eee;\n    margin-left: -1px;\n\n    &:before, &:after {\n      transform: translateY(-50%);\n      width: 1px;\n      height: 30px;\n    }\n    &:before {margin-left: -2px;}\n    &:after {margin-left: 1px;}\n  }\n\n  &.splitpanes--horizontal > .splitpanes__splitter,\n  .splitpanes--horizontal > .splitpanes__splitter {\n    height: 9px;\n    border-top: 1px solid #eee;\n    margin-top: -1px;\n\n    &:before,\n    &:after {\n      transform: translateX(-50%);\n      width: 30px;\n      height: 1px;\n    }\n    &:before {margin-top: -2px;}\n    &:after {margin-top: 1px;}\n  }\n}\n</style>\n","var render, staticRenderFns\nimport script from \"./splitpanes.vue?vue&type=script&lang=js&\"\nexport * from \"./splitpanes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./splitpanes.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"splitpanes.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}